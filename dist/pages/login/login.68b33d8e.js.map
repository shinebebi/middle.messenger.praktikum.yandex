{"mappings":"AACA,MAAMA,EAAYC,SAASC,cAAc,SACtBF,EAAUE,cAAc,UACrBF,EAAUE,cAAc,aASvB,sBCXPC,EAAKC,GACbC,KAAKC,cAAgBH,EAAII,aACzBF,KAAKG,sBAAwBL,EAAIM,qBACjCJ,KAAKK,qBAAuBP,EAAIQ,oBAChCN,KAAKO,YAAcT,EAAIU,WACvBR,KAAKS,MAAQV,EACbC,KAAKU,WAAaC,MAAMC,KAAKZ,KAAKS,MAAMI,iBAAiBb,KAAKC,gBAC9DD,KAAKc,cAAgBd,KAAKS,MAAMZ,cAAcG,KAAKG,uBAGvDY,kBACIf,KAAKU,WAAWM,SAASd,IACrBF,KAAKiB,gBAAgBf,MAEzBF,KAAKkB,qBAGTC,iBAAgB,KACZnB,KAAKoB,sBAETA,mBAAkB,KACdpB,KAAKkB,qBACLlB,KAAKU,WAAWM,SAAQd,IACpBA,EAAamB,iBAAiB,QAASrB,KAAKsB,qBAC5CpB,EAAamB,iBAAiB,QAASrB,KAAKkB,oBAC5ChB,EAAamB,iBAAiB,QAASrB,KAAKuB,oBAIpDA,eAAkBrB,IACdsB,QAAQC,IAAIvB,EAAawB,QACP1B,KAAKS,MAAMZ,cAAa,IAAKK,EAAawB,OAAOC,mBACzDC,YAAc1B,EAAawB,OAAOC,MAGhDT,mBAAkB,KACVlB,KAAK6B,oBACL7B,KAAKc,cAAcgB,UAAUC,IAAI/B,KAAKK,sBACtCL,KAAKc,cAAckB,aAAa,WAAY,cAE5ChC,KAAKc,cAAcgB,UAAUG,OAAOjC,KAAKK,sBACzCL,KAAKc,cAAcoB,gBAAgB,cAI3CL,iBAAgB,IACL7B,KAAKU,WAAWyB,MAAKjC,IAChBA,EAAakC,SAASC,QAItCf,oBAAmB,KACftB,KAAKU,WAAWM,SAAQd,IACfA,EAAakC,SAASC,MAGvBrC,KAAKiB,gBAAgBf,GAFrBF,KAAKsC,gBAAgBpC,OAOjCoC,gBAAmBpC,IACf,MAAMqC,EAAevC,KAAKS,MAAMZ,cAAa,IAAKK,EAAayB,cAC/DY,EAAaX,YAAc1B,EAAasC,kBACxCD,EAAaT,UAAUC,IAAI/B,KAAKO,cAGpCU,gBAAmBf,IACf,MAAMqC,EAAevC,KAAKS,MAAMZ,cAAa,IAAKK,EAAayB,cAC/DY,EAAaX,YAAc,GAC3BW,EAAaT,UAAUG,OAAOjC,KAAKO,eDlElB,CACrBL,aAAc,SACdE,qBAAsB,UACtBE,oBAAqB,eACrBE,WAAY,eAG2Cb,GAC5CwB","sources":["src/pages/login/login.js","utils/FormValidation.js"],"sourcesContent":["import {FormValidator} from \"../../../utils/FormValidation.js\"\nconst formLogin = document.querySelector('.main');\nconst loginInput = formLogin.querySelector('.login');\nconst passwordInput = formLogin.querySelector('.password');\n\nconst validationConfig = {\n    inputElement: '.input',\n    submitButtonSelector: '.submit',\n    inactiveButtonClass: 'btn-inactive',\n    errorClass: 'input-error'\n};\n\nconst loginValidator = new FormValidator(validationConfig, formLogin);\nloginValidator.enableValidation()","class FormValidator {\n    constructor(obj, form) {\n        this._inputElement = obj.inputElement;\n        this._submitButtonSelector = obj.submitButtonSelector;\n        this._inactiveButtonClass = obj.inactiveButtonClass;\n        this._errorClass = obj.errorClass;\n        this._form = form\n        this._inputList = Array.from(this._form.querySelectorAll(this._inputElement));\n        this._submitButton = this._form.querySelector(this._submitButtonSelector);\n    }\n\n    resetValidation() {\n        this._inputList.forEach((inputElement) => {\n            this._hideInputError(inputElement)\n        });\n        this._toggleButtonState();\n    }\n\n    enableValidation = () => {\n        this._setEventListeners();\n    }\n    _setEventListeners = () => {\n        this._toggleButtonState()\n        this._inputList.forEach(inputElement => {\n            inputElement.addEventListener('input', this._checkInputValidity);\n            inputElement.addEventListener('input', this._toggleButtonState)\n            inputElement.addEventListener('input', this._upPlaceholder)\n        });\n    }\n\n    _upPlaceholder = (inputElement) => {\n        console.log(inputElement.target)\n        const inputName = this._form.querySelector(`.${inputElement.target.name}-field-name`)\n        inputName.textContent = inputElement.target.name\n    }\n\n    _toggleButtonState = () => {\n        if (this._hasInvalidInput()) {\n            this._submitButton.classList.add(this._inactiveButtonClass);\n            this._submitButton.setAttribute('disabled', 'disabled');\n        } else {\n            this._submitButton.classList.remove(this._inactiveButtonClass);\n            this._submitButton.removeAttribute('disabled');\n        }\n    }\n\n    _hasInvalidInput = () => {\n        return this._inputList.some(inputElement => {\n            return !inputElement.validity.valid;\n        });\n    }\n\n    _checkInputValidity = () => {\n        this._inputList.forEach(inputElement => {\n            if (!inputElement.validity.valid) {\n                this._showInputError(inputElement);\n            } else {\n                this._hideInputError(inputElement);\n            }\n        })\n    }\n\n    _showInputError = (inputElement) => {\n        const errorElement = this._form.querySelector(`.${inputElement.name}-error`)\n        errorElement.textContent = inputElement.validationMessage;\n        errorElement.classList.add(this._errorClass);\n    }\n\n    _hideInputError = (inputElement) => {\n        const errorElement = this._form.querySelector(`.${inputElement.name}-error`)\n        errorElement.textContent = '';\n        errorElement.classList.remove(this._errorClass);\n    }\n}\n\nexport {FormValidator} ;"],"names":["$b9483ee618ef9d54$var$formLogin","document","querySelector","obj","form","this","_inputElement","inputElement","_submitButtonSelector","submitButtonSelector","_inactiveButtonClass","inactiveButtonClass","_errorClass","errorClass","_form","_inputList","Array","from","querySelectorAll","_submitButton","resetValidation","forEach","_hideInputError","_toggleButtonState","enableValidation","_setEventListeners","addEventListener","_checkInputValidity","_upPlaceholder","console","log","target","name","textContent","_hasInvalidInput","classList","add","setAttribute","remove","removeAttribute","some","validity","valid","_showInputError","errorElement","validationMessage"],"version":3,"file":"login.68b33d8e.js.map"}